1+1
rnorm
?rnorm
rnorm(10)
plot(rnorm(10))
plot(rnorm(100))
plot(rnorm(1000))
plot(dnorm(1000))
plot(dnorm(rnorm(100)))
dnorm
library(lattice)
p<-xyplot(1:100, rnorm(100))
p<-xyplot(1:100
)
xyplot?
q
xyplot()
p<-panel.xyplot(1:100
)
p<-panel.xyplot(1:100, rnorm(100))
class(p)
p<-xyplot(rnorm(100)~1:100)
class(p)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(nlme)
weight
Diet
BodyWeight
text("blabla")
p.text("blabla")
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
g <- qplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
g <- qplot(movies, aes(movies$votes, movies$rating))
print(g)
help(ggplot)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
setwd("Dropbox/Coursera/ExploratoryDA/review/")
source("plot2.R")
setwd("~")
setwd("Documents/Kaggle/Titanic/")
mydata <- read.csv("train.csv", sep=",")
train <- read.csv("train.csv", sep=",")
test <- read.csv("test.csv", sep=",")
View(mydata)
View(mydata)
train <- read.csv("train.csv", sep=",")
test <- read.csv("test.csv", sep=",")
str(train)
source("titanic.R")
str(train)
train$Survived
table(train$Survived)
prop.table(table(train$Survived))
str(test)
test$Survived <- rep(0, 418)
str(test)
source("titanic.R")
source("titanic.R")
child<-train[train$num < 14,]
child
str(child)
child<-train[train$Age < 14,]
child
str(child)
table(child$Survived)
prop.table(table(child$Survived))
summary(train$Age)
train$Child <- 0
train$Child[train$Age < 18] <- 1
> aggregate(Survived ~ Child + Sex, data=train, FUN=sum)
aggregate(Survived ~ Child + Sex, data=train, FUN=sum)
aggregate(Survived ~ Child + Sex, data=train, FUN=length)
aggregate(Survived ~ Child + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
names(train)
train$Fare2 <- '30+'
train$Fare2[train$Fare < 30 & train$Fare >= 20] <- '20-30'
train$Fare2[train$Fare < 20 & train$Fare >= 10] <- '10-20'
train$Fare2[train$Fare < 10] <- '<10'
aggregate(Survived ~ Fare2 + Pclass + Sex, data=train, FUN=function(x) {sum(x)/length(x)})
source("titanic.R")
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
plot(fit)
text(fit)
install.packages('rattle')
install.packages('rpart.plot')
install.packages('RColorBrewer')
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type = "class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "myfirstdtree.csv", row.names = FALSE)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train,
method="class", control=rpart.control(minsplit=2, cp=0))
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age +
SibSp + Parch + Fare + Embarked, data=train, method="class")
new.fit <- prp(fit,snip=TRUE)$obj
fancyRpartPlot(new.fit)
test$Survived <- NA
combi <- rbind(train, test)
train <- read.csv("train.csv", sep=",",stringsAsFactors=FALSE)
test <- read.csv("test.csv", sep=",",stringsAsFactors=FALSE)
test$Survived <- NA
combi <- rbind(train, test)
combi$Name <- as.character(combi$Name)
combi$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
View(train)
View(combi)
combi$Title <- sub(' ', '', combi$Title)
table(combi$Title)
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
combi$Title <- factor(combi$Title)
combi$FamilySize <- combi$SibSp + combi$Parch + 1
combi$Surname <- sapply(combi$Name,
FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize),
combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
table(combi$FamilyID)
table(combi$FamilyID)
famIDs <- data.frame(table(combi$FamilyID))
famIDs
famIDs <- famIDs[famIDs$Freq <= 2,]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
combi$FamilyID <- factor(combi$FamilyID)
str(famIDs)
View(famIDs)
source("titanic2.R")
source("titanic2.R")
install.packages('randomForest')
library(randomForest)
summary(combi$Age)
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data=combi[!is.na(combi$Age),], method="anova")
combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])
fancyRpartPlot(Agefit)
summary(combi)
> summary(combi$Embarked)
summary(combi$Embarked)
str(combi$Embarked)
which(combi$Embarked == '')
summary(combi$Fare)
View(combi)
combi$FamilyID2 <- combi$FamilyID
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
combi$FamilyID2 <- factor(combi$FamilyID2)
View(combi)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age
+ SibSp + Parch + Fare + Embarked +
Title + FamilySize +
FamilyID2,
data=train, importance=TRUE, ntree=2000)
source("titanic2.R")
source("titanic2.R")
source("titanic2.R")
summary(train)
train <- combi[1:891,]
test <- combi[892:1309,]
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age
+ SibSp + Parch + Fare + Embarked +
Title + FamilySize +
FamilyID2,
data=train, importance=TRUE, ntree=2000)
varImpPlot(fit)
fit
varImpPlot(fit)
class(fit)
train <- read.csv("train.csv", sep=",",stringsAsFactors=FALSE)
test <- read.csv("test.csv", sep=",",stringsAsFactors=FALSE)
test$Survived <- NA
combi <- rbind(train, test)
combi$Name <- as.character(combi$Name)
combi$Title <- sapply(combi$Name,
FUN=function(x) {strsplit(x,
split='[,.]')[[1]][2]})
combi$Title <- sub(' ', '', combi$Title)
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady',
'the Countess', 'Jonkheer')] <- 'Lady'
combi$Title <- factor(combi$Title)
combi$FamilySize <- combi$SibSp + combi$Parch + 1
combi$Surname <- sapply(combi$Name,
FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize),
combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 3] <- 'Small'
combi$Surname <- sapply(combi$Name,
FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize),
combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
famIDs <- famIDs[famIDs$Freq <= 2,]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
combi$FamilyID <- factor(combi$FamilyID)
table(combi$FamilyID)
famIDs <- famIDs[famIDs$Freq <= 2,]
famIDs <- data.frame(table(combi$FamilyID))
famIDs <- famIDs[famIDs$Freq <= 2,]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
combi$FamilyID <- factor(combi$FamilyID)
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare
+ Embarked + Title + FamilySize,
data=combi[!is.na(combi$Age),], method="anova")
combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])
which(combi$Embarked == '')
combi$Embarked[c(62,830)] = "S"
combi$Embarked <- factor(combi$Embarked)
which(is.na(combi$Fare))
combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)
combi$FamilyID2 <- combi$FamilyID
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
combi$FamilyID2 <- factor(combi$FamilyID2)
set.seed(415)
train <- combi[1:891,]
test <- combi[892:1309,]
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age
+ SibSp + Parch + Fare + Embarked +
Title + FamilySize +
FamilyID2,
data=train, importance=TRUE, ntree=2000)
combi$FamilyID2 <- combi$FamilyID
combi$FamilyID2 <- as.character(combi$FamilyID2)
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
combi$FamilyID2 <- factor(combi$FamilyID2)
train <- combi[1:891,]
test <- combi[892:1309,]
set.seed(415)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age
+ SibSp + Parch + Fare + Embarked +
Title + FamilySize +
FamilyID2,
data=train, importance=TRUE, ntree=2000)
str(train)
which.na(train$Survived)
which(is.na(train$Survived))
which(is.na(train$Embarked))
which(is.na(train$Sex))
which(is.na(train$SibSp))
which(is.na(train$Pclass))
which(is.na(train$Age))
which(is.na(train$Parch))
which(is.na(train$Fare))
which(is.na(train$Title))
which(is.na(train$FamilyID2))
which(is.na(train$FamilySize))
train$Sex <- as.factor(train$Sex)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age
+ SibSp + Parch + Fare + Embarked +
Title + FamilySize +
FamilyID2,
data=train, importance=TRUE, ntree=2000)
varImpPlot(fit)
Prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "firstforest.csv", row.names = FALSE)
test$Sex <- as.factor(test$Sex)
Prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "firstforest.csv", row.names = FALSE)
install.packages('party')
library(party)
set.seed(415)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,
data = train, controls=cforest_unbiased(ntree=2000, mtry=3))
install.packages("mvtnorm")
install.packages("mvtnorm")
setRepositories(addURLs =
c(CRANxtras = "http://www.stats.ox.ac.uk/pub/RWin"))
install.packages("mvtnorm")
setRepositories(addURLs =
c(CRANxtras = "http://www.stats.ox.ac.uk/pub/RWin"))
install.packages("mvtnorm")
install.packages("mvtnorm", type="source")
setRepositories(addURLs =
c(CRANxtras = "http://www.stats.ox.ac.uk/pub/RWin"))
install.packages("mvtnorm", type="source")
install.packages("mvtnorm")
library("mvtnorm", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(party)
set.seed(415)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex +
Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID,
data = train,
controls=cforest_unbiased(ntree=2000, mtry=3))
Prediction <- predict(fit, test)
Prediction <- predict(fit, test, OOB=TRUE, type = "response")
submit <- data.frame(PassengerId = test$PassengerId,
Survived = Prediction)
write.csv(submit, file = "firstcforest.csv", row.names = FALSE)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex +
+                    Age + SibSp + Parch + Fare +
+                    Embarked + Title + FamilySize + FamilyID,
+                data = train,
+                controls=cforest_unbiased(ntree=5000, mtry=3))
fit <- cforest(as.factor(Survived) ~ Pclass + Sex +
+                    Age + SibSp + Parch + Fare +
+                    Embarked + Title + FamilySize + FamilyID,
+                data = train,
+                controls=cforest_unbiased(ntree=5000, mtry=3))
fit <- cforest(as.factor(Survived) ~ Pclass + Sex +
Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID,
data = train,
controls=cforest_unbiased(ntree=5000, mtry=3))
Prediction <- predict(fit, test, OOB=TRUE, type = "response")
submit <- data.frame(PassengerId = test$PassengerId,
Survived = Prediction)
write.csv(submit, file = "biggercforest.csv", row.names = FALSE)
combi$logprice <- log(combi$Fare)
View(combi)
train <- combi[1:891,]
test <- combi[892:1309,]
fit <- cforest(as.factor(Survived) ~ Pclass + Sex +
Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID + logprice,
data = train,
controls=cforest_unbiased(ntree=2000, mtry=3))
Prediction <- predict(fit, test, OOB=TRUE, type = "response")
submit <- data.frame(PassengerId = test$PassengerId,
Survived = Prediction)
class(train$logprice)
str(train)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex +
Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID + logprice,
data = train,
controls=cforest_unbiased(ntree=2000, mtry=3))
fit <- cforest(as.factor(Survived) ~ Pclass + Sex +
Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID,
data = train,
controls=cforest_unbiased(ntree=2000, mtry=3))
fit <- cforest(as.factor(Survived) ~ Pclass + Sex +
Age + SibSp + Parch + Fare +
Embarked + Title + FamilySize + FamilyID,
data = train,
controls=cforest_unbiased(ntree=2000, mtry=3))
